;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = ./src
lib_dir = ./lib
libdeps_dir = ./piolibdeps
default_envs = mmu-skrmini

#
# Feature Dependencies
#
[features]

#
# Default values apply to all 'env:' prefixed environments
#
[env]
framework     = arduino
extra_scripts = ${common.extra_scripts}
build_flags   = ${common.build_flags}
lib_deps      = ${common.lib_deps}
monitor_speed = 250000
monitor_flags =
  --quiet
  --echo
  --eol
    LF
  --filter
    colorize
  --filter
    time

#
# The 'common' values are used for most Marlin builds
#
[common]
default_src_filter = +<*>
extra_scripts      =
  pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
  pre:buildroot/share/PlatformIO/scripts/common-cxxflags.py
build_flags        = -fmax-errors=5 -g -fmerge-all-constants 
lib_deps           = TMCStepper 


[env:mmu-gt2560]
platform = atmelavr
framework = arduino
board = megaatmega2560
board_build.mcu = atmega2560
board_build.f_cpu = 16000000L
upload_speed = 115200
monitor_speed = 250000

[env:mmu-melzi]
platform = atmelavr
framework = arduino
board = sanguino_atmega1284p
board_build.f_cpu = 16000000L
upload_speed  = 57600
board_upload.maximum_size = 126976
# board_build.mcu = atmega2560
# monitor_speed = 250000

[env:mmu-skrmini]
# needed for atom ???
# build_flags= -lc
platform = ststm32@<6.2.0
board = genericSTM32F103RC
framework = arduino
platform_packages = tool-stm32duino
extra_scripts = buildroot/share/PlatformIO/scripts/STM32F103RC_SKR_MINI.py
monitor_speed = 250000
build_flags       =  -DDEBUG_LEVEL=0 -std=gnu++14 -DHAVE_SW_SERIAL -DSS_TIMER=4
build_unflags     = -std=gnu++11
lib_deps          = SoftwareSerialM
lib_ignore    = SoftwareSerial

[env:mmu-skrmini-e3-1_2]
platform          = ${env:mmu-skrmini.platform}
extends           = env:mmu-skrmini
board_upload.maximum_size=524288
build_flags       = ${env:mmu-skrmini.build_flags} -DSTM32_FLASH_SIZE=512
lib_deps = ${env:mmu-skrmini.lib_deps} 
            TMCStepper@~0.7.1

[env:mmu-skrmini-e3-dip-1_1]
platform          = ${env:mmu-skrmini.platform}
extends           = env:mmu-skrmini
board_upload.maximum_size=524288
build_flags       = ${env:mmu-skrmini.build_flags} -DSTM32_FLASH_SIZE=512
lib_deps = ${env:mmu-skrmini.lib_deps} 
            TMCStepper@~0.7.1            


#################################
#                               #
#     LPC176x Architecture      #
#                               #
#################################

#
# NXP LPC176x ARM Cortex-M3
#
[common_LPC]
platform          = https://github.com/p3p/pio-nxplpc-arduino-lpc176x/archive/0.1.3.zip
board             = nxp_lpc1768
lib_ldf_mode      = off
lib_compat_mode   = strict
extra_scripts     = ${common.extra_scripts}
src_filter        = ${common.default_src_filter} 
lib_deps          = SPI 
                    ${common.lib_deps}
build_flags       = ${common.build_flags}  
  # debug options for backtrace
  #-funwind-tables
  #-mpoke-function-name

#
# NXP LPC176x ARM Cortex-M3
#
[env:SKR_13]
platform  = ${common_LPC.platform}
extends   = common_LPC
board     = nxp_lpc1768
framework = arduino

[env:SKR_14]
platform  = ${common_LPC.platform}
extends   = common_LPC
board     = nxp_lpc1768
framework = arduino

[env:SKR_14_TURBO]
platform  = ${common_LPC.platform}
extends   = common_LPC
board     = nxp_lpc1769
framework = arduino
